name: Build and Release RStudio Server SIF

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write   # not strictly needed for Docker Hub, but ok to keep

jobs:
  build-sif:
    runs-on: ubuntu-22.04
    env:
      TAG:   ${{ github.ref_name }}  # e.g., v1.2.3
      # docker.io/<username>/<repo>:<tag>   <- repo should exist on Docker Hub and be lowercase
      OCI_REF: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/rstudio-server-oma:${{ github.ref_name }}

    steps:
      - name: Checkout code at tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Apptainer (PPA)
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:apptainer/ppa
          sudo apt-get update
          sudo apt-get install -y apptainer

      - name: Build SIF
        run: |
          apptainer build rstudio_server.sif rstudio-server.def

      - name: Export installed R packages from SIF
        run: |
          apptainer exec rstudio_server.sif Rscript -e "
            ip <- as.data.frame(utils::installed.packages()[, c('Package','Version')]);
            write.table(ip, file = 'installed_packages.tsv', sep = '\t', row.names = FALSE, quote = FALSE)
          "

      - name: Generate checksums
        run: |
          sha256sum rstudio_server.sif > rstudio_server.sif.sha256
          sha256sum installed_packages.tsv > installed_packages.tsv.sha256

      # ---- Push SIF to Docker Hub as an ORAS artifact ---------------------
      - name: Set up ORAS
        uses: oras-project/setup-oras@v1

      - name: Login to Docker Hub (ORAS)
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | oras login docker.io \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push SIF to Docker Hub (ORAS)
        run: |
          oras push "${{ env.OCI_REF }}" \
            --artifact-type application/vnd.apptainer.image.sif \
            --annotation "org.opencontainers.image.title=rstudio_server.sif" \
            rstudio_server.sif:application/vnd.apptainer.image.sif

      # ---- Create/Update Release with small assets + helpful body ----------
      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            installed_packages.tsv
            installed_packages.tsv.sha256
            rstudio_server.sif.sha256
          body: |
            ## RStudio Server SIF
            The SIF image is published to Docker Hub as an OCI/ORAS artifact.

            **Pull with ORAS**
            ```bash
            oras pull docker.io/${{ secrets.DOCKERHUB_USERNAME }}/rstudio-server-oma:${{ env.TAG }} -a
            ```
            This will download `rstudio_server.sif` into the current directory.

            **Verify checksum**
            ```bash
            sha256sum -c rstudio_server.sif.sha256
            ```

      # ---- Optionally persist the TSVs to main branch ----------------------
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: repo-main
          fetch-depth: 0

      - name: Copy TSV into repo and (re)generate README table (no deps)
        run: |
          cp installed_packages.tsv repo-main/installed_packages.tsv
          python - << 'PY'
          import csv, os, re
          tsv_path = os.path.join('repo-main', 'installed_packages.tsv')
          rows = list(csv.DictReader(open(tsv_path), delimiter='\t'))
          rows.sort(key=lambda r: r['Package'])
          lines = ['| Package | Version |','|---|---|'] + [f"| {r['Package']} | {r['Version']} |" for r in rows]
          table_md = "\n".join(lines)
          readme_path = os.path.join('repo-main','README.md')
          txt = open(readme_path,'r',encoding='utf-8').read() if os.path.exists(readme_path) else '# Project\n'
          START, END = '<!-- BEGIN: INSTALLED_PACKAGES -->','<!-- END: INSTALLED_PACKAGES -->'
          block = f"{START}\n\n## Installed Packages\n\n{table_md}\n\n{END}\n"
          if START in txt and END in txt:
              txt = re.sub(START + r'.*?' + END, block, txt, flags=re.S)
          else:
              txt = txt.rstrip() + '\n\n' + block + '\n'
          open(readme_path,'w',encoding='utf-8').write(txt)
          PY

      - name: Commit changes to main (installed_packages.tsv + README.md)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: repo-main
          commit_message: "chore: update installed_packages.tsv and README [skip ci]"
          file_pattern: |
            installed_packages.tsv
            README.md
